{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","itemsLoad","itemsPerPage","total","paginate","currentPage","nextPage","prevPage","pageNumbers","i","Math","ceil","push","className","href","onClick","map","number","item","items","from","to","numbers","n","getNumbers","App","useState","setItemsPerPage","setCurrentPage","indexOflastItem","indexOfFirstItem","currentItem","slice","lastItem","firstItem","length","id","onChange","event","target","value","selected","htmlFor","pageNumber","prev","ReactDOM","render","document","getElementById"],"mappings":"4KAUaA,EACT,SAAC,GAKD,IAHK,IADLC,EACI,EADJA,UAAWC,EACP,EADOA,aAAcC,EACrB,EADqBA,MAAOC,EAC5B,EAD4BA,SAAUC,EACtC,EADsCA,YAAaC,EACnD,EADmDA,SAAUC,EAC7D,EAD6DA,SAE3DC,EAAc,GAEXC,EAAI,EAAGA,GAAKC,KAAKC,KAAKR,EAAQD,GAAeO,GAAK,EACzDD,EAAYI,KAAKH,GAGnB,OACE,qCACE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UAAS,oBAA+B,IAAhBR,EAAoB,WAAa,IAA7D,SACE,mBACE,UAAQ,WACRQ,UAAU,YACVC,KAAK,QACL,gBAAc,OACdC,QAASR,EALX,oBAUDC,EAAYQ,KAAI,SAAAC,GAAM,OACrB,oBAAIJ,UAAS,oBAAeR,IAAgBY,EAAS,SAAW,IAAhE,SACE,mBACE,UAAQ,WACRJ,UAAU,YACVC,KAAK,KACLC,QAAS,kBAAMX,EAASa,IAJ1B,SAMGA,KAPsEA,MAY7E,oBAAIJ,UAAU,YAAd,SACE,mBACE,UAAQ,WACRA,UAAU,YACVC,KAAK,QACL,gBAAc,QACdC,QAAST,EALX,uBAWJ,6BACGL,EAAUe,KAAI,SAAAE,GAAI,OACjB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCzDnB,IAAMC,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQV,KAAKW,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBR,KAAI,SAAAO,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAAoBC,mBAASP,GAAtBlB,EAAP,oBACA,EAAwCyB,mBAAS,GAAjD,mBAAOxB,EAAP,KAAqByB,EAArB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOrB,EAAP,KAAoBuB,EAApB,KAOMC,EAAkBxB,EAAcH,EAChC4B,EAAmBD,EAAkB3B,EACrC6B,EAAc9B,EAAU+B,MAAMF,EAAkBD,GAEhDI,EAAW5B,EAAcH,EACzBgC,EAAYD,EAAW/B,EAO7B,OACE,sBAAKW,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiC6B,EAAY,EAD7C,cACoDD,EADpD,eACmEhC,EAAUkC,OAD7E,OAIA,sBAAKtB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVwB,SA/BW,SAACC,GACpBX,GAAiBW,EAAMC,OAAOC,OAC9BZ,EAAe,IA8BPY,MAAOtC,EALT,UAOE,wBAAQsC,MAAO,EAAf,eACA,wBAAQA,MAAO,EAAGC,UAAQ,EAA1B,eACA,wBAAQD,MAAO,GAAf,gBACA,wBAAQA,MAAO,GAAf,qBAIJ,uBAAOE,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOF,EAAUkC,OACjBlC,UAAW8B,EACX7B,aAAcA,EACdE,SAtCW,SAACuC,GAAD,OAAwBf,EAAee,IAuClDtC,YAAaA,EACbC,SAtCW,kBAAMsB,GAAe,SAAAgB,GAAI,OAAIA,EAAO,MAuC/CrC,SAtCW,kBAAMqB,GAAe,SAAAgB,GAAI,OAAIA,EAAO,YE1BvDC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.a61741cb.chunk.js","sourcesContent":["type Props = {\n  itemsLoad: string[],\n  itemsPerPage: number,\n  total: number,\n  paginate: (number:number) => void,\n  currentPage: number,\n  nextPage: () => void,\n  prevPage: () => void\n};\n\nexport const Pagination: React.FC<Props>\n  = ({\n    itemsLoad, itemsPerPage, total, paginate, currentPage, nextPage, prevPage,\n  }) => {\n    const pageNumbers = [];\n\n    for (let i = 1; i <= Math.ceil(total / itemsPerPage); i += 1) {\n      pageNumbers.push(i);\n    }\n\n    return (\n      <>\n        <ul className=\"pagination\">\n          <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n            <a\n              data-cy=\"prevLink\"\n              className=\"page-link\"\n              href=\"#prev\"\n              aria-disabled=\"true\"\n              onClick={prevPage}\n            >\n              «\n            </a>\n          </li>\n          {pageNumbers.map(number => (\n            <li className={`page-item ${currentPage === number ? 'active' : ''}`} key={number}>\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href=\"!#\"\n                onClick={() => paginate(number)}\n              >\n                {number}\n              </a>\n            </li>\n          ))}\n\n          <li className=\"page-item\">\n            <a\n              data-cy=\"nextLink\"\n              className=\"page-link\"\n              href=\"#next\"\n              aria-disabled=\"false\"\n              onClick={nextPage}\n            >\n              »\n            </a>\n          </li>\n        </ul>\n        <ul>\n          {itemsLoad.map(item => (\n            <li\n              data-cy=\"item\"\n              key={item}\n            >\n              {item}\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  };\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsLoad] = useState(items);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const indexOflastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOflastItem - itemsPerPage;\n  const currentItem = itemsLoad.slice(indexOfFirstItem, indexOflastItem);\n\n  const lastItem = currentPage * itemsPerPage;\n  const firstItem = lastItem - itemsPerPage;\n\n  const paginate = (pageNumber: number) => setCurrentPage(pageNumber);\n\n  const nextPage = () => setCurrentPage(prev => prev + 1);\n  const prevPage = () => setCurrentPage(prev => prev - 1);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem + 1} - ${lastItem} of ${itemsLoad.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleChange}\n            value={itemsPerPage}\n          >\n            <option value={3}>3</option>\n            <option value={5} selected>5</option>\n            <option value={10}>10</option>\n            <option value={20}>20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={itemsLoad.length}\n        itemsLoad={currentItem}\n        itemsPerPage={itemsPerPage}\n        paginate={paginate}\n        currentPage={currentPage}\n        nextPage={nextPage}\n        prevPage={prevPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}