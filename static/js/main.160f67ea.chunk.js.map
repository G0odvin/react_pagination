{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","itemsLoad","itemsPerPage","total","onPageChange","currentPage","setCurrentPage","pageNumbers","numberOfPages","Math","ceil","i","push","className","href","onClick","prev","map","number","item","items","from","to","numbers","n","getNumbers","App","useState","setItemsPerPage","indexOflastItem","indexOfFirstItem","currentItem","slice","lastItem","min","length","firstItem","id","onChange","event","target","value","selected","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"4KASaA,EACT,SAAC,GAWD,IAJK,IANLC,EAMI,EANJA,UACAC,EAKI,EALJA,aACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,YACAC,EACI,EADJA,eAEMC,EAAc,GACdC,EAAgBC,KAAKC,KAAKP,EAAQD,GAE/BS,EAAI,EAAGA,GAAKF,KAAKC,KAAKP,EAAQD,GAAeS,GAAK,EACzDJ,EAAYK,KAAKD,GAenB,OACE,qCACE,qBAAIE,UAAU,aAAd,UACE,oBAAIA,UAAS,oBAA+B,IAAhBR,EAAoB,WAAa,IAA7D,SACE,mBACE,UAAQ,WACRQ,UAAU,YACVC,KAAK,QACL,gBAA+B,IAAhBT,EAAoB,OAAS,QAC5CU,QAfO,WACK,IAAhBV,GACFC,GAAe,SAAAU,GAAI,OAAIA,EAAO,MAQ1B,oBAUDT,EAAYU,KAAI,SAAAC,GAAM,OACrB,oBAAIL,UAAS,oBAAeR,IAAgBa,EAAS,SAAW,IAAhE,SACE,mBACE,UAAQ,WACRL,UAAU,YACVC,KAAI,WAAMI,GACVH,QAAS,kBAAMX,EAAac,IAJ9B,SAMGA,KAPsEA,MAY7E,oBAAIL,UAAS,oBAAeR,IAAgBG,EAAgB,WAAa,IAAzE,SACE,mBACE,UAAQ,WACRK,UAAU,YACVC,KAAK,QACL,gBAAeT,IAAgBG,EAAgB,OAAS,QACxDO,QA7CO,WACXV,IAAgBG,GAClBF,GAAe,SAACU,GAAD,OAAkBA,EAAO,MAsCpC,uBAWJ,6BACGf,EAAUgB,KAAI,SAAAE,GAAI,OACjB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC1EnB,IAAMC,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQX,KAAKY,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBR,KAAI,SAAAO,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAAoBC,mBAASP,GAAtBnB,EAAP,oBACA,EAAwC0B,mBAAS,GAAjD,mBAAOzB,EAAP,KAAqB0B,EAArB,KACA,EAAsCD,mBAAiB,GAAvD,mBAAOtB,EAAP,KAAoBC,EAApB,KAOMuB,EAAkBxB,EAAcH,EAChC4B,EAAmBD,EAAkB3B,EACrC6B,EAAc9B,EAAU+B,MAAMF,EAAkBD,GAEhDI,EAAWxB,KAAKyB,IAAIhC,EAAeG,EAAaJ,EAAUkC,QAC1DC,EAAYlC,GAAgBG,EAAc,GAAK,EAQrD,OACE,sBAAKQ,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiC+B,EADjC,cACgDH,EADhD,eAC+DhC,EAAUkC,OADzE,OAIA,sBAAKtB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRwB,GAAG,kBACHxB,UAAU,eACVyB,SAhCW,SAACC,GACpBX,GAAiBW,EAAMC,OAAOC,OAC9BnC,EAAe,IA+BPmC,MAAOvC,EALT,UAOE,wBAAQuC,MAAO,EAAf,eACA,wBAAQA,MAAO,EAAGC,UAAQ,EAA1B,eACA,wBAAQD,MAAO,GAAf,gBACA,wBAAQA,MAAO,GAAf,qBAIJ,uBAAOE,QAAQ,kBAAkB9B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOF,EAAUkC,OACjBlC,UAAW8B,EACX7B,aAAcA,EACdE,aAvCe,SAACwC,GAChBA,IAASvC,GACXC,EAAesC,IAsCbvC,YAAaA,EACbC,eAAgBA,QEhExBuC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.160f67ea.chunk.js","sourcesContent":["type Props = {\n  itemsLoad: string[],\n  itemsPerPage: number,\n  total: number,\n  onPageChange: (number:number) => void,\n  currentPage: number,\n  setCurrentPage: (cb: (currentPage: number) => number) => void\n};\n\nexport const Pagination: React.FC<Props>\n  = ({\n    itemsLoad,\n    itemsPerPage,\n    total,\n    onPageChange,\n    currentPage,\n    setCurrentPage,\n  }) => {\n    const pageNumbers = [];\n    const numberOfPages = Math.ceil(total / itemsPerPage);\n\n    for (let i = 1; i <= Math.ceil(total / itemsPerPage); i += 1) {\n      pageNumbers.push(i);\n    }\n\n    const nextPage = () => {\n      if (currentPage !== numberOfPages) {\n        setCurrentPage((prev: number) => prev + 1);\n      }\n    };\n\n    const prevPage = () => {\n      if (currentPage !== 1) {\n        setCurrentPage(prev => prev - 1);\n      }\n    };\n\n    return (\n      <>\n        <ul className=\"pagination\">\n          <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n            <a\n              data-cy=\"prevLink\"\n              className=\"page-link\"\n              href=\"#prev\"\n              aria-disabled={currentPage === 1 ? 'true' : 'false'}\n              onClick={prevPage}\n            >\n              «\n            </a>\n          </li>\n          {pageNumbers.map(number => (\n            <li className={`page-item ${currentPage === number ? 'active' : ''}`} key={number}>\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${number}`}\n                onClick={() => onPageChange(number)}\n              >\n                {number}\n              </a>\n            </li>\n          ))}\n\n          <li className={`page-item ${currentPage === numberOfPages ? 'disabled' : ''}`}>\n            <a\n              data-cy=\"nextLink\"\n              className=\"page-link\"\n              href=\"#next\"\n              aria-disabled={currentPage === numberOfPages ? 'true' : 'false'}\n              onClick={nextPage}\n            >\n              »\n            </a>\n          </li>\n        </ul>\n        <ul>\n          {itemsLoad.map(item => (\n            <li\n              data-cy=\"item\"\n              key={item}\n            >\n              {item}\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  };\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsLoad] = useState(items);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const indexOflastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOflastItem - itemsPerPage;\n  const currentItem = itemsLoad.slice(indexOfFirstItem, indexOflastItem);\n\n  const lastItem = Math.min(itemsPerPage * currentPage, itemsLoad.length);\n  const firstItem = itemsPerPage * (currentPage - 1) + 1;\n\n  const onPageChange = (page: number) => {\n    if (page !== currentPage) {\n      setCurrentPage(page);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${itemsLoad.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleChange}\n            value={itemsPerPage}\n          >\n            <option value={3}>3</option>\n            <option value={5} selected>5</option>\n            <option value={10}>10</option>\n            <option value={20}>20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={itemsLoad.length}\n        itemsLoad={currentItem}\n        itemsPerPage={itemsPerPage}\n        onPageChange={onPageChange}\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}